{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 LucidaGrande-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
\f3\fmodern\fcharset77 Courier;\f4\fmodern\fcharset77 Courier-Bold;}
{\colortbl;\red255\green255\blue255;}
\pard\tx1140\ql\qnatural

\f0\b\fs34 \cf0 Known Problems/Issues
\f1\b0\fs24 \
\
\pard\tx1140\ql\qnatural

\f2\b \cf0 What has changed\
\pard\tx1140\ql\qnatural

\f1\b0 \cf0 The most significant change is that there is now an 
\f3 NDComponentInstance
\f1  class, if you find that 
\f3 NDAppleScriptObject
\f1  doesn't not seem to respond to an message any more then you will probable find that it has be moved to 
\f3 NDComponentInstance
\f1 . For example if you used to have the following in your code\
\
\pard\fi1140\ql\qnatural

\f3\fs22 \cf0 \CocoaLigature0 [theAppleScript setFinderAsDefaultTarget];
\f1\fs24 \CocoaLigature1 \
\pard\tx1140\ql\qnatural
\cf0 \
you will have to change this to\
\
\pard\fi1140\ql\qnatural

\f3\fs22 \cf0 \CocoaLigature0 [[theAppleScript componentInstance] setFinderAsDefaultTarget];
\f1\fs24 \CocoaLigature1 \
\pard\tx1140\ql\qnatural
\cf0 \
Another things that has changed is that previously 
\f3 NDAppleScriptObject
\f1  used to make sure that there was a shared 
\f3 NSAppleEventManager
\f1  for you, the code for doing that was complicated when you can do that yourself much more easily, see the section titled '
\f2\b Executing scripts that send messages to your own application
\f1\b0 '.
\f2\b \

\f1\b0 \
\pard\tx1140\ql\qnatural

\f2\b \cf0 Executing AppleScripts in a different thread to your main thread.
\f1\b0 \
The best way to do this is to get an  
\f3 NDComponentInstance
\f1  with the method 
\f3 componentInstance
\f1  and the use a lock to control which AppleScript thread has access to the component instance. You can switch between threads by implement the protocols 
\f3 NDAppleScriptObjectActive
\f1   and 
\f3 NDAppleScriptObjectSendEvent
\f1  and then release and acquire the lock in your implementation of these threads. Displaying dialogs from scripts running asynchronously (starting one before another has finished) to the user can be confusing so what I do is use a conditional lock so my 
\f3 NDAppleScriptObjectActive
\f1  and 
\f3 NDAppleScriptObjectSendEvent
\f1  methods simply give up the component for obtaining information from scripts, like which handlers they have, and only allow another script to run after one has finished. Alternatively you can try giving each AppleScript its own 
\f3 NDComponentInstance
\f1 .\
If your application is going to be sending event to its self, and this include anything not within a tell statement, you have to implement the 
\f3 NDAppleScriptObjectSendEvent
\f1  protocol and then pass any events into the main run loop thread (See \'d2Executing scripts that send messages to your own application\'d3). You can prevent events wrapped in no tell block from being sent to your application by using one of the following methods 
\f3 - setDefaultTarget
\f1 :, 
\f3 - setDefaultTargetAsCreator:
\f1  or 
\f3 - setFinderAsDefaultTarget
\f1  to have the events sent to another application.\
\

\f2\b Executing scripts that send messages to your own application.
\f1\b0 \
Prior to handling any AppleEvent you have to have a shared 
\f3 NSAppleEventManager
\f1  instance, this happens automatically when your application receives an AppleEvent from another application. But AppleEvent sent to your self are handle differently and so this shared 
\f3 NSAppleEventManager
\f1  instance is not created. To fix this you have to either create one manually using the method 
\f3 -[NSAppleEventManager sharedAppleEventManager]
\f1  or alternatively post the notification 
\f3 NSAppleEventManagerWillProcessFirstEventNotification
\f1 .\
\

\f2\b Getting the source from 
\f4 NDAppleScriptObject
\f2 \
\pard\tx1140\ql\qnatural

\f1\b0 \cf0 Sometimes the method 
\f3 -[NDAppleScriptObject source]
\f1  fails, not sure why, error -2079.\
\
If you have any problems with any of this then feel free to email me as I have done all of this in my own application.\
\
Nathan Day\
nathan_day@mac.com}